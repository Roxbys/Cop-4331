Test 1:
We can test for physical hardware by simply looking at the Robot's physical components i.e. motors, control board, raspberry pi.

Test 2:
In order to Test if we can make mazes on the go, we can put down tape and the Robot will follow it. If it does then pass. 
If not then the test fails.

Test 3:
To test if the Robot successfully completed a maze we can run the following code on the raspberry pi. 
If the word Pass appears in the console, then the test pased, otherwise the test fails. 

#startcode

from romi import *
import time

def main():
  romi = Robot()
  romi.turnOffInterruptsRGB()
  if(romi.checkPurple())
    print("Pass")
  romi.stop()
  romi.turnOnInterruptsRGB()
  romi.disableRGB()  
#end main
    
if __name__ == "__main__": main()  

#endcode

Test 4: We can test if the Robot follows a path based on color by executing the following code. 
Lay down a peice of red tape and a green tape at least 4 inches apart.
Place the Robot at the edge of the green tape and execute the code below.
Then Place the Robot at the end of the red tape and execute the code again.
If the Robot follows the green tape and not the red tape then the test has passed. Otherwise the test failed.

#startcode

from romi import *
import time

def main():
  romi = Robot()
  romi.turnOffInterruptsRGB()
  if(romi.checkGreen())
    romi.goForwardtwo(0)
  romi.stop()
  romi.turnOnInterruptsRGB()
  romi.disableRGB()  
#end main
    
if __name__ == "__main__": main()   

#endcode

Test 5: To test if we can control the Robot remotely, we first need to get the IP address of the raspberry pi. 
We type in the IP address into a web browser and use the interface to move the robot. 
If the robot moves then the test passed otherwise it fails.

Test 6: In order to Test if the robot adjusts for straight movement along a path, then you can run the code provided in Test 4.
If the Robot follows the green path in a straight line then the test passed. otherwise it failed.

Test 7: In order to test that the robot can make turns based on a design pattern we can run the following code.
If the robot turns left then the test passed, otherwise the test failed.

#startcode

# turn robot in a specified direction
  romi = Robot()
  romi.turnOffInterruptsRGB()
  romi.turn('left') 
  romi.stop()
  romi.turnOnInterruptsRGB()
  romi.disableRGB()  
#end main
    
if __name__ == "__main__": main()   
  
#endcode  

Test 8: To test if the robot detects deadends you can execute the following code.

#startcode

  romi = Robot()
  romi.turnOffInterruptsRGB()
  if(not romi.getValidPaths())
    print('deadend')
  romi.stop()
  romi.turnOnInterruptsRGB()
  romi.disableRGB()  
#end main
    
if __name__ == "__main__": main()   
  



#endcode
